package steps;

import static org.testng.Assert.expectThrows;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.bouncycastle.oer.its.ieee1609dot2.basetypes.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import Hooks.hook;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import cucumber.api.java.en.And;
import cucumber.api.java.en.But;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class ProfileDetailsAndFeeds {

	public WebDriver driver=hook.getdriver();

	logindetails login=new logindetails();

	//Fill the profile details 

	@Given("user have to login the one's account")
	public void userHaveToLoginTheOneSAccountt() {
	    
		login.logindetailOne();
	}

	@Given("fill the details on the profile")
	public void fillTheDetailsOnTheProfile() throws Throwable {
	   
		driver.findElement(By.cssSelector("div.text-truncate.secondaryText")).click();
		driver.findElement(By.xpath("//div[@class='d-flex']//div[1]")).click();
		
		Thread.sleep(3000);

		driver.findElement(By.xpath("(//textarea[contains(@class,'form-control border-bottom-only')])[1]")).sendKeys("About");
		driver.findElement(By.xpath("(//textarea[contains(@class,'form-control border-bottom-only')])[2]")).sendKeys("Job");
		driver.findElement(By.xpath("(//textarea[contains(@class,'form-control border-bottom-only')])[3]")).sendKeys("Company");
		driver.findElement(By.xpath("(//textarea[contains(@class,'form-control border-bottom-only')])[4]")).sendKeys("School");
		driver.findElement(By.xpath("//button[@type='submit']")).click();

	}

	//Check the add details are showing on other profile

	@Given("user have to login the two's account to verify the profile details")
	public void userHaveToLoginTheTwoSAccounttoverifytheprofiledetails() {
	    
		login.logindetailTwo();
	}

	@When("view the profile")
	public void viewTheProfile() {
		driver.findElement(By.xpath("//*[@id=\"root\"]/div/div[2]/div[1]/div/div[3]/div[6]/div[2]/a/div")).click();
		driver.findElement(By.xpath("//div[@class='peoplePic']//img[1]")).click();
		
	}

	@Then("added information should be displayed")
	public void addedInformationShouldBeDisplayed() throws Throwable {
		
	Thread.sleep(3000);
		
    Boolean job= driver.findElement(By.xpath("(//div[contains(@class,'interestsHolder apb5')])[1]")).isDisplayed();
	Boolean company= driver.findElement(By.xpath("(//div[contains(@class,'interestsHolder apb5')])[2]")).isDisplayed();
	Boolean school= driver.findElement(By.xpath("(//div[contains(@class,'interestsHolder apb5')])[2]")).isDisplayed();
	Boolean about = driver.findElement(By.xpath("(//div[contains(@class,'interestsHolder apt5')]//div)[1]")).isDisplayed();

	Assert.assertTrue(job,"Job is not displayed");
	Assert.assertTrue(company,"company is not displayed");
	Assert.assertTrue(school,"school is not displayed");
	Assert.assertTrue(about,"about is not displayed");

	}
	
	//Check the feed page that added details show on feed page also.

	@Given("user have to login the two's account to verify on the feed page")
	public void userHaveToLoginTheTwoSAccounttoverifyOnfeeddetails() {
	   
		
		login.logindetailTwo();
		
	}

	@And("user view the feed page")
	public void userViewTheFeedPage() {
	   
		driver.findElement(By.xpath("//div[normalize-space(text())='Feeds']")).click();

	}

	@Then("here updated feeds should be display")
	public void hereUpdatedFeedsShouldBeDisplay() throws Throwable {
	   
		Thread.sleep(3000);		
		Boolean feedlikeButton = driver.findElement(By.xpath("(//button[@class='currentLikeDP'])[1]")).isEnabled();
		Assert.assertTrue(feedlikeButton,"Feed is not displayed");
	
	}
	
	//Check the like option is working or not on feed page
	
	@Given("user have to login the two's account to verify like on the feed page")
	public void userHaveToLoginTheTwoSAccountToVerifyLikeOnTheFeedPage() {
	   
		
		login.logindetailTwo();
		
	}

	@Given("user view the feed page to give like")
	public void userViewTheFeedPageToGiveLike() {
	  
		driver.findElement(By.xpath("//div[normalize-space(text())='Feeds']")).click();
	}

	@Then("user click the like for any feed")
	public void userClickTheLikeForAnyFeed() throws Throwable {
	     Thread.sleep(3000);
		 driver.findElement(By.xpath("(//button[@class='currentLikeDP'])[1]")).click();
	}
	
	// Check the liked feed updated in the one's account

	@Given("user have to login the {string}")
	public void userHaveToLoginTheoneess(String string) {
	   
		
		login.logindetailOne();
		
	}

	@Given("user go the user's message page")
	public void userGoTheUserSMessagePage() {
	   
		driver.findElement(By.xpath("//*[@id=\"root\"]/div/div[2]/div[1]/div/div[3]/div[4]/div[2]/a/div")).click();
		
		driver.findElement(By.xpath("//div[@class='text-truncate pointCurs']")).click();
	}

	@Then("verify the liked feed is updated")
	public void verifyTheLikedFeedIsUpdated() {
		
	  Boolean likedFeed = driver.findElement(By.xpath("//div[@class='messageImgs']//img[1]")).isDisplayed(); 
	
	  Assert.assertTrue(likedFeed,"liked Feed is not displayed");

	}
	
	
	//Check the message option is working or not on feed page

	@Given("user have to login the two's account to check the message option")
	public void userHaveToLoginTheTwoSAccountToCheckTheMessageOption() {
	   
		login.logindetailTwo();

	}

@Given("user view the feed page to click the message option")
public void userViewTheFeedPageToClickTheMessageOption() {
   
	driver.findElement(By.xpath("//div[normalize-space(text())='Feeds']")).click();
	driver.findElement(By.xpath("(//button[@class='currentChatDP'])[1]")).click();

}

	@Then("here message option is working")
	public void hereMessageOptionIsWorking() {
	    
		  Boolean ProfileName = driver.findElement(By.xpath("(//div[contains(@class,'text-truncate ')])[3]")).isDisplayed(); 
			
		  Assert.assertTrue(ProfileName,"liked Feed is not displayed");
	}
}

